CREATE TABLE found_posts (
    id SERIAL PRIMARY KEY,           -- Unique identifier for each post
    item_name VARCHAR(255) NOT NULL, -- Name of the found item
    location VARCHAR(255) NOT NULL,  -- Location where the item was found
    date DATE NOT NULL,  -- Date when the item was found  
	additional_info TEXT, -- Additional information about the item
    category_id INT NOT NULL,        -- Foreign key referencing categories table    
    image VARCHAR(255), 
	user_id UUID NOT NULL, 
	-- Path or URL to the image of the item
    FOREIGN KEY (category_id),
        REFERENCES categories (id)
	FOREIGN KEY (user_id) REFERENCES users(user_id)
                 -- Optional: handle delete behavior
);


INSERT INTO categories (name) 
VALUES 
    ('Bags and accessories'),
    ('Clothing'),
    ('Documents and IDs'),
    ('Electronics'),
    ('Furniture'),
    ('Medical Items'),
    ('Miscellaneous Items'),
    ('Money'),
    ('Pets'),
    ('Person'),
    ('Personal Accessories'),
    ('Stationery and Office supplies'),
    ('Vehicles'),
    ('Others');


CREATE TABLE claims (
    id SERIAL PRIMARY KEY,
    post_id INT NOT NULL,            -- ID of the post being claimed
    post_type VARCHAR(10) NOT NULL,
	message text NOT NULL,
	image varchar(255),
	user_id UUID NOT NULL,           -- User making the claim
	user_name varchar(255) NOT NULL, -- 'lost' or 'found'
    status VARCHAR(20) DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (user_id, post_id, post_type),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);
